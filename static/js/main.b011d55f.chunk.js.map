{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storagesService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","NewDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b011d55f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth(); \r\nexport const dbService = firebase.firestore();\r\nexport const storagesService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} =event;\r\n        if(name ===\"email\"){\r\n            setEmail(value)\r\n        } else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount) {\r\n                //create account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            } else {\r\n                //log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    return (\r\n      <>  \r\n        <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"email\" \r\n                    type = \"text\" \r\n                    placeholder=\"Email\" \r\n                    required value={email} \r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required value={password} \r\n                    className=\"authInput\"\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\"  className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span></>\r\n    )\r\n};\r\nexport default AuthForm","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub,} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth= () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target : { name },\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider(); \r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                    </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storagesService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delee this nweet?\");\r\n        console.log(ok);\r\n        if (ok) {\r\n            //delete nweets\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storagesService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing(prev => !prev);   \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\nreturn (\r\n    <div className=\"nweet\">\r\n        {\r\n            editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}\r\n                    className=\"container nweetEdit\">\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Edit you nweet\" \r\n                            value={newNweet} \r\n                            required \r\n                            onChange={onChange}\r\n                         />\r\n                         <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form> \r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />)\r\n                    }\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                        </div>\r\n                    )}\r\n                    </>\r\n            )}\r\n    </div>\r\n)\r\n};\r\n\r\nexport default Nweet;","import { storagesService, dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let  attachmentUrl = \"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = storagesService.ref().child(`${userObj.uid}/${{uuidv4}}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj ={\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { \r\n            target:{ value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n        } = finishedEvent; \r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n            <input \r\n            value={nweet} \r\n            id=\"attach-file\"\r\n            onChange={onChange}\t        \r\n            type=\"file\"\r\n            type=\"text\"\t        \r\n            accept=\"image/*\"\r\n            placeholder=\"What's on your mind?\"\t        \r\n            onChange={onFileChange}\r\n            maxLength={120}\t        \r\n            style={{\r\n                opacity: 0,\r\n        }} />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                <img\r\n                  src={attachment}\r\n                  style={{\r\n                    backgroundImage: attachment,\r\n                  }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                  <span>Remove</span>\r\n                  <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService, storagesService } from \"fbase\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Home= ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);   \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet) => (\r\n                <Nweet \r\n                    key={nweet.id} \r\n                    nweetObj={nweet} \r\n                    isOwner={nweet.creatorId === userObj.uid} \r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n    \r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => \r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\nexport default Navigation;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ( { refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [NewDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== NewDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: NewDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\"\r\n                autoFocus \r\n                placeholder=\"Display name\" \r\n                value={NewDisplayName} \r\n                className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                    style={{\r\n                      maxWidth: 890,\r\n                      width: \"100%\",\r\n                      margin: \"0 auto\",\r\n                      marginTop: 80,\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj}  refreshUser={refreshUser} />\r\n                        </Route>\r\n                        \r\n                    </div> \r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </>\r\n                    )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile:(args) => user.updateProfile(args),\n        });\n      }else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n      <AppRouter \n        refreshUser={refreshUser} \n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj} \n      /> \n      ) : (\n        \"Initializing...\"\n      )}\n      </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport App from './components/App';\nimport ReactDOM from 'react-dom';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}