[{"C:\\Users\\user\\Documents\\nwitter\\src\\index.js":"1","C:\\Users\\user\\Documents\\nwitter\\src\\components\\App.js":"2","C:\\Users\\user\\Documents\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\user\\Documents\\nwitter\\src\\routes\\Auth.js":"4","C:\\Users\\user\\Documents\\nwitter\\src\\routes\\Home.js":"5","C:\\Users\\user\\Documents\\nwitter\\src\\fbase.js":"6","C:\\Users\\user\\Documents\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\user\\Documents\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\user\\Documents\\nwitter\\src\\components\\Nweet.js":"9"},{"size":207,"mtime":1610086706680,"results":"10","hashOfConfig":"11"},{"size":993,"mtime":1611658904780,"results":"12","hashOfConfig":"11"},{"size":1221,"mtime":1611656954032,"results":"13","hashOfConfig":"11"},{"size":2887,"mtime":1611039129876,"results":"14","hashOfConfig":"11"},{"size":2912,"mtime":1611650808781,"results":"15","hashOfConfig":"11"},{"size":749,"mtime":1611301620936,"results":"16","hashOfConfig":"11"},{"size":337,"mtime":1611652326323,"results":"17","hashOfConfig":"11"},{"size":1238,"mtime":1611656977130,"results":"18","hashOfConfig":"11"},{"size":2261,"mtime":1611563442349,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"luyplw",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\nwitter\\src\\index.js",[],"C:\\Users\\user\\Documents\\nwitter\\src\\components\\App.js",[],"C:\\Users\\user\\Documents\\nwitter\\src\\components\\Router.js",[],"C:\\Users\\user\\Documents\\nwitter\\src\\routes\\Auth.js",[],["41","42"],"C:\\Users\\user\\Documents\\nwitter\\src\\routes\\Home.js",["43"],"import Nweet from \"components/Nweet\";\r\nimport { dbService, storagesService } from \"fbase\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Home= ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let  attachmentUrl = \"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = storagesService.ref().child(`${userObj.uid}/${{uuidv4}}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj ={\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { \r\n            target:{ value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n        } = finishedEvent; \r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(null);\r\n    return (\r\n        <div>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n            value={nweet} \r\n            onChange={onChange} \r\n            type=\"text\" \r\n            placeholder=\"What's on your mind?\" \r\n            maxLength={120} />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n        <div>\r\n            {nweets.map((nweet) => (\r\n                <Nweet \r\n                    key={nweet.id} \r\n                    nweetObj={nweet} \r\n                    isOwner={nweet.creatorId === userObj.uid} \r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n    \r\nexport default Home;","C:\\Users\\user\\Documents\\nwitter\\src\\fbase.js",[],"C:\\Users\\user\\Documents\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\user\\Documents\\nwitter\\src\\routes\\Profile.js",["44"],"import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ( { refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [NewDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== NewDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: NewDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\" \r\n                placeholder=\"Display name\" \r\n                value={NewDisplayName} \r\n                />\r\n            <input type=\"submit\" value=\"Update Profile\" />\r\n        </form>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    )\r\n};","C:\\Users\\user\\Documents\\nwitter\\src\\components\\Nweet.js",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":71,"column":21,"nodeType":"52","endLine":71,"endColumn":72},{"ruleId":"53","severity":1,"message":"54","line":5,"column":1,"nodeType":"55","endLine":41,"endColumn":3},{"ruleId":"50","severity":1,"message":"51","line":51,"column":25,"nodeType":"52","endLine":51,"endColumn":88},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]